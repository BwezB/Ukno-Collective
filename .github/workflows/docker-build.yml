name: Test and Publish

# Trigger workflow when pushing to main branch/PR
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Jobs to run (in order in this case)
jobs:
  test:
    name: Run Integration Tests
    runs-on: ubuntu-latest

    services:
      auth-db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: auth_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      graph-db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: graph_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build services
        run: |
          go build -o auth-service ./cmd/authservice
          go build -o graph-service ./cmd/graphservice

      - name: Start services
        run: |
          ./auth-service --db-password=password --auth-service-password=password &
          ./graph-service --db-password=password &
          sleep 10 # Wait for services to start

      - name: Run integration tests
        run: go test -v ./tests/...

  publish:
    name: Publish Docker Images
    needs: test # Only run if tests pass
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only publish on main branch pushes

    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          go-version: '1.23'

      # Build and start up services
      - name: Build and start up services
        run: docker-compose build && docker-compose up -d
             sleep 10  # Wait for services to start up

      # Run tests
      - name: Run tests
        run: go test ./tests -v

      # After tests, clean up services
      - name: Clean up services
        if: always()  # Run even if tests fail
        run: docker-compose down
      
      # # Login to Docker Hub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Auth Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.auth
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wikno-auth:latest

      - name: Build and push Graph Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.graph
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wikno-graph:latest