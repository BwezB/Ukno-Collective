// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: api/proto/graph/graph.proto

// Package graph provides services for managing graph-based knowledge representation

package graph

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SearchRequest represents a search query for finding entities, connection types, or property types.
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [REQUIRED] [MAX LEN 255]
	// Name to search for (case-sensitive exact match).
	// Example: "Person" or "Vehicle"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// EntitiesList represents a collection of entities matching a search query.
type EntitiesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of entities matching the search criteria.
	// May be empty if no matches are found
	Entities []*UsersEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *EntitiesList) Reset() {
	*x = EntitiesList{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitiesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitiesList) ProtoMessage() {}

func (x *EntitiesList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitiesList.ProtoReflect.Descriptor instead.
func (*EntitiesList) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{1}
}

func (x *EntitiesList) GetEntities() []*UsersEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// ConnectionTypesList represents a collection of connection types matching a search query.
type ConnectionTypesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of connection types matching the search criteria.
	// May be empty if no matches are found
	ConnectionTypes []*UsersConnectionType `protobuf:"bytes,1,rep,name=connection_types,json=connectionTypes,proto3" json:"connection_types,omitempty"`
}

func (x *ConnectionTypesList) Reset() {
	*x = ConnectionTypesList{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypesList) ProtoMessage() {}

func (x *ConnectionTypesList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionTypesList.ProtoReflect.Descriptor instead.
func (*ConnectionTypesList) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionTypesList) GetConnectionTypes() []*UsersConnectionType {
	if x != nil {
		return x.ConnectionTypes
	}
	return nil
}

// PropertyTypesList represents a collection of property types matching a search query.
type PropertyTypesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of property types matching the search criteria.
	// May be empty if no matches are found
	PropertyTypes []*UsersPropertyType `protobuf:"bytes,1,rep,name=property_types,json=propertyTypes,proto3" json:"property_types,omitempty"`
}

func (x *PropertyTypesList) Reset() {
	*x = PropertyTypesList{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PropertyTypesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyTypesList) ProtoMessage() {}

func (x *PropertyTypesList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyTypesList.ProtoReflect.Descriptor instead.
func (*PropertyTypesList) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{3}
}

func (x *PropertyTypesList) GetPropertyTypes() []*UsersPropertyType {
	if x != nil {
		return x.PropertyTypes
	}
	return nil
}

// UserRequest represents a request to create a new user in the graph service. This endpoint can only be used by the auth service.
type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [REQUIRED]
	// Unique identifier for the user
	// Example: "123e4567-e89b-12d3-a456-426614174000"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{4}
}

func (x *UserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UserData represents all graph data associated with a user.
type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of all entities created or linked by the user.
	// May be empty for new users
	Entities []*UsersEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// List of all connection types created or linked by the user.
	// May be empty for new users
	ConnectionTypes []*UsersConnectionType `protobuf:"bytes,2,rep,name=connection_types,json=connectionTypes,proto3" json:"connection_types,omitempty"`
	// List of all property types created or linked by the user.
	// May be empty for new users
	PropertyTypes []*UsersPropertyType `protobuf:"bytes,3,rep,name=property_types,json=propertyTypes,proto3" json:"property_types,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{5}
}

func (x *UserData) GetEntities() []*UsersEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *UserData) GetConnectionTypes() []*UsersConnectionType {
	if x != nil {
		return x.ConnectionTypes
	}
	return nil
}

func (x *UserData) GetPropertyTypes() []*UsersPropertyType {
	if x != nil {
		return x.PropertyTypes
	}
	return nil
}

// EntityRequest represents a request to create or update an entity.
type EntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [OPTIONAL] [MAX LEN 255] [FORMAT UUID v4]
	// Unique identifier for the entity, recieved by the FindEntities endpoint. You cannot create your own ID.
	// If provided for CREATE operations, server will link the users version of the entity to the shared entity.
	// Required for UPDATE operations.
	// Example: "123e4567-e89b-12d3-a456-426614174000"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// [REQUIRED] [MAX LEN 255]
	// Name for the users version of this entity.
	// Can be seen by other users.
	// Example: "John Doe" or "Company XYZ".
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// [REQUIRED] [MAX LEN 4096]
	// Description for the users version of this entity.
	// Should provide clear, comprehensive information about the entity, can be seen by other users.
	// Example: "Senior Software Engineer with 10 years of experience..."
	Definition string `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *EntityRequest) Reset() {
	*x = EntityRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRequest) ProtoMessage() {}

func (x *EntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRequest.ProtoReflect.Descriptor instead.
func (*EntityRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{6}
}

func (x *EntityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

// UsersEntity represents a user's version of an entity.
type UsersEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This user's name for the entity
	// Example: "John Doe"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This user's definition of the entity
	// Example: "Senior Software Engineer in our team..."
	Definition string `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	// ID of the user who created this version of the entity
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ID of the underlying shared entity
	// Format: UUID v4
	EntityId string `protobuf:"bytes,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *UsersEntity) Reset() {
	*x = UsersEntity{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersEntity) ProtoMessage() {}

func (x *UsersEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersEntity.ProtoReflect.Descriptor instead.
func (*UsersEntity) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{7}
}

func (x *UsersEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersEntity) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *UsersEntity) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UsersEntity) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

// ConnectionTypeRequest represents a request to create a connection type.
type ConnectionTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [OPTIONAL] [MAX LEN 255] [FORMAT UUID v4]
	// Unique identifier for the connection type, recieved by the FindConnectionTypes endpoint. You cannot create your own ID.
	// If provided for CREATE operations, server will link the users version of the connection type to the shared connection type.
	// Required for UPDATE operations.
	// Example: "123e4567-e89b-12d3-a456-426614174000"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// [REQUIRED] [MAX LEN 255]
	// Name for the users version of this connection type.
	// Can be seen by other users.
	// Example: "Works at" or "Brother"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// [REQUIRED] [MAX LEN 4096]
	// Description for the users version of this connection type.
	// Should provide clear, comprehensive information about the connection type, can be seen by other users.
	// Example: "Represents a current employment relationship between a person and a company"
	Definition string `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *ConnectionTypeRequest) Reset() {
	*x = ConnectionTypeRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeRequest) ProtoMessage() {}

func (x *ConnectionTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionTypeRequest.ProtoReflect.Descriptor instead.
func (*ConnectionTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectionTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectionTypeRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

// UsersConnectionType represents a user's version of a connection type.
type UsersConnectionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This user's name for the connection type
	// Example: "Works at"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This user's definition of the connection type
	// Example: "Represents a current employment relationship..."
	Definition string `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	// ID of the user who created this version of the entity
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ID of the underlying shared connection type
	ConnectionTypeId string `protobuf:"bytes,4,opt,name=connection_type_id,json=connectionTypeId,proto3" json:"connection_type_id,omitempty"`
}

func (x *UsersConnectionType) Reset() {
	*x = UsersConnectionType{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersConnectionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersConnectionType) ProtoMessage() {}

func (x *UsersConnectionType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersConnectionType.ProtoReflect.Descriptor instead.
func (*UsersConnectionType) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{9}
}

func (x *UsersConnectionType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersConnectionType) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *UsersConnectionType) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UsersConnectionType) GetConnectionTypeId() string {
	if x != nil {
		return x.ConnectionTypeId
	}
	return ""
}

// PropertyTypeRequest represents a request to create a property type.
type PropertyTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [OPTIONAL] [MAX LEN 255] [FORMAT UUID v4]
	// Unique identifier for the property type, recieved by the FindPropertyTypes endpoint. You cannot create your own ID.
	// If provided for CREATE operations, server will link the users version of the property type to the shared property type.
	// Required for UPDATE operations.
	// Example: "123e4567-e89b-12d3-a456-426614174000"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// [REQUIRED] [MAX LEN 255]
	// Name for the users version of this property type
	// Can be seen by other users
	// Example: "Salary" or "Starts on"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// [REQUIRED] [MAX LEN 4096]
	// Description for the users version of this property type
	// Should provide clear, comprehensive information about the property type, can be seen by other users
	// Example: "Annual gross salary in USD"
	Definition string `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	// Data type for this property
	// MUST be one of: "string", "int", "float", "boolean"
	// Example: "float" for salary
	ValueType string `protobuf:"bytes,4,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *PropertyTypeRequest) Reset() {
	*x = PropertyTypeRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PropertyTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyTypeRequest) ProtoMessage() {}

func (x *PropertyTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyTypeRequest.ProtoReflect.Descriptor instead.
func (*PropertyTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{10}
}

func (x *PropertyTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PropertyTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropertyTypeRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *PropertyTypeRequest) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

// UsersPropertyType represents a user's version of a property type.
type UsersPropertyType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This user's name for the property type
	// Example: "Salary"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This user's definition of the property type
	// Example: "Annual gross salary in USD"
	Definition string `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	// ID of the underlying shared property type
	PropertyTypeId string `protobuf:"bytes,3,opt,name=property_type_id,json=propertyTypeId,proto3" json:"property_type_id,omitempty"`
	// ID of the user who created this version of the entity
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Data type for this property
	// One of: "string", "int", "float", "boolean"
	ValueType string `protobuf:"bytes,5,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *UsersPropertyType) Reset() {
	*x = UsersPropertyType{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersPropertyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersPropertyType) ProtoMessage() {}

func (x *UsersPropertyType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersPropertyType.ProtoReflect.Descriptor instead.
func (*UsersPropertyType) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{11}
}

func (x *UsersPropertyType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersPropertyType) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *UsersPropertyType) GetPropertyTypeId() string {
	if x != nil {
		return x.PropertyTypeId
	}
	return ""
}

func (x *UsersPropertyType) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UsersPropertyType) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

// Empty message for requests/responses that don't need any data
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{12}
}

// PingRequest represents a ping request.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{13}
}

// PingResponse responds to a ping.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service_name is the name of the responding service.
	// Example: "auth"
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_api_proto_graph_graph_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_graph_graph_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_graph_graph_proto_rawDescGZIP(), []int{14}
}

func (x *PingResponse) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

var File_api_proto_graph_graph_proto protoreflect.FileDescriptor

var file_api_proto_graph_graph_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x1d, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x53, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x5b, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22,
	0x78, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x0d,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a,
	0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x32, 0x84, 0x05, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x77, 0x65, 0x7a, 0x42, 0x2f, 0x57, 0x69, 0x6b, 0x6e,
	0x6f, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_proto_graph_graph_proto_rawDescOnce sync.Once
	file_api_proto_graph_graph_proto_rawDescData = file_api_proto_graph_graph_proto_rawDesc
)

func file_api_proto_graph_graph_proto_rawDescGZIP() []byte {
	file_api_proto_graph_graph_proto_rawDescOnce.Do(func() {
		file_api_proto_graph_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_graph_graph_proto_rawDescData)
	})
	return file_api_proto_graph_graph_proto_rawDescData
}

var file_api_proto_graph_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_proto_graph_graph_proto_goTypes = []any{
	(*SearchRequest)(nil),         // 0: graph.SearchRequest
	(*EntitiesList)(nil),          // 1: graph.EntitiesList
	(*ConnectionTypesList)(nil),   // 2: graph.ConnectionTypesList
	(*PropertyTypesList)(nil),     // 3: graph.PropertyTypesList
	(*UserRequest)(nil),           // 4: graph.UserRequest
	(*UserData)(nil),              // 5: graph.UserData
	(*EntityRequest)(nil),         // 6: graph.EntityRequest
	(*UsersEntity)(nil),           // 7: graph.UsersEntity
	(*ConnectionTypeRequest)(nil), // 8: graph.ConnectionTypeRequest
	(*UsersConnectionType)(nil),   // 9: graph.UsersConnectionType
	(*PropertyTypeRequest)(nil),   // 10: graph.PropertyTypeRequest
	(*UsersPropertyType)(nil),     // 11: graph.UsersPropertyType
	(*Empty)(nil),                 // 12: graph.Empty
	(*PingRequest)(nil),           // 13: graph.PingRequest
	(*PingResponse)(nil),          // 14: graph.PingResponse
}
var file_api_proto_graph_graph_proto_depIdxs = []int32{
	7,  // 0: graph.EntitiesList.entities:type_name -> graph.UsersEntity
	9,  // 1: graph.ConnectionTypesList.connection_types:type_name -> graph.UsersConnectionType
	11, // 2: graph.PropertyTypesList.property_types:type_name -> graph.UsersPropertyType
	7,  // 3: graph.UserData.entities:type_name -> graph.UsersEntity
	9,  // 4: graph.UserData.connection_types:type_name -> graph.UsersConnectionType
	11, // 5: graph.UserData.property_types:type_name -> graph.UsersPropertyType
	4,  // 6: graph.GraphService.CreateUser:input_type -> graph.UserRequest
	12, // 7: graph.GraphService.GetUserData:input_type -> graph.Empty
	6,  // 8: graph.GraphService.CreateEntity:input_type -> graph.EntityRequest
	6,  // 9: graph.GraphService.UpdateEntity:input_type -> graph.EntityRequest
	0,  // 10: graph.GraphService.FindEntities:input_type -> graph.SearchRequest
	8,  // 11: graph.GraphService.CreateConnectionType:input_type -> graph.ConnectionTypeRequest
	0,  // 12: graph.GraphService.FindConnectionTypes:input_type -> graph.SearchRequest
	10, // 13: graph.GraphService.CreatePropertyType:input_type -> graph.PropertyTypeRequest
	0,  // 14: graph.GraphService.FindPropertyTypes:input_type -> graph.SearchRequest
	13, // 15: graph.GraphService.Ping:input_type -> graph.PingRequest
	12, // 16: graph.GraphService.CreateUser:output_type -> graph.Empty
	5,  // 17: graph.GraphService.GetUserData:output_type -> graph.UserData
	7,  // 18: graph.GraphService.CreateEntity:output_type -> graph.UsersEntity
	12, // 19: graph.GraphService.UpdateEntity:output_type -> graph.Empty
	1,  // 20: graph.GraphService.FindEntities:output_type -> graph.EntitiesList
	9,  // 21: graph.GraphService.CreateConnectionType:output_type -> graph.UsersConnectionType
	2,  // 22: graph.GraphService.FindConnectionTypes:output_type -> graph.ConnectionTypesList
	11, // 23: graph.GraphService.CreatePropertyType:output_type -> graph.UsersPropertyType
	3,  // 24: graph.GraphService.FindPropertyTypes:output_type -> graph.PropertyTypesList
	14, // 25: graph.GraphService.Ping:output_type -> graph.PingResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_proto_graph_graph_proto_init() }
func file_api_proto_graph_graph_proto_init() {
	if File_api_proto_graph_graph_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_graph_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_graph_graph_proto_goTypes,
		DependencyIndexes: file_api_proto_graph_graph_proto_depIdxs,
		MessageInfos:      file_api_proto_graph_graph_proto_msgTypes,
	}.Build()
	File_api_proto_graph_graph_proto = out.File
	file_api_proto_graph_graph_proto_rawDesc = nil
	file_api_proto_graph_graph_proto_goTypes = nil
	file_api_proto_graph_graph_proto_depIdxs = nil
}
